services:
  kinova_humble:
    image: nvidia_ros_humble_kinova_source:latest
    container_name: kinova_camera_container
    hostname: kinova_camera_container
    runtime: nvidia
    privileged: true
    environment:
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
      - DISPLAY
      - ROS_DOMAIN_ID=30
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - CYCLONEDDS_URI=/Kinova_gen3/config/kinova_manipulator.xml
    devices:
      - /dev/dri
      - /dev/input/js0:/dev/input/js0 ## Add this line to pass through the joystick usign joy_linux package
      # - /dev/bus/usb/001/011:/dev/bus/usb/001/011
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /home/lab05/kinova_test/kinova_gen3_Lab_source/:/Kinova_gen3/src:rw  # Mount the current directory as readable and writable
      - ./dds_config/kinova_manipulator.xml:/tmp/kinova_manipulator.xml:ro
    networks:
      macvlan_net:
        ipv4_address: 192.168.1.101
      bridge_net: {}
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    stdin_open: true
    tty: true
    restart: "no"
    command: sh -c "
      mkdir -p /Kinova_gen3/config &&
      cp /tmp/kinova_manipulator.xml /Kinova_gen3/config/ &&
      /bin/bash
      "

  intel_camera:
    image: intel_camera:latest
    container_name: camera_kinova_container
    hostname: camera_kinova_container
    runtime: nvidia
    environment:
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
      - DISPLAY
      - ROS_DOMAIN_ID=30
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - CYCLONEDDS_URI=/Intel_Camera/config/intel_camera.xml
    devices:
      - /dev/dri  # for GPU access
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/bus/usb:/dev/bus/usb
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /home/lab05/intel_camera_ws/Camera_ROS2/src/:/Intel_Camera/src:rw  # Mount the current directory as readable and writable
      - ./dds_config/intel_camera.xml:/tmp/intel_camera.xml:ro
    networks:
      macvlan_net:
        ipv4_address: 192.168.1.102
      bridge_net: {}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    stdin_open: true
    tty: true
    restart: "no"
    command: sh -c "
      mkdir -p /Intel_Camera/config && cp /tmp/intel_camera.xml /Intel_Camera/config &&
      /bin/bash
      "


networks:
  macvlan_net:
    external: true
  bridge_net:
    driver: bridge 

    